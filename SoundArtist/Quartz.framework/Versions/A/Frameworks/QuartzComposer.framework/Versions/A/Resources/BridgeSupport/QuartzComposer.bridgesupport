<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='0.9'>
<depends_on path='/System/Library/Frameworks/OpenCL.framework'/>
<depends_on path='/System/Library/Frameworks/JavaScriptCore.framework'/>
<depends_on path='/System/Library/Frameworks/QTKit.framework'/>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/AppKit.framework'/>
<depends_on path='/System/Library/Frameworks/QuartzCore.framework'/>
<depends_on path='/System/Library/Frameworks/OpenGL.framework'/>
<depends_on path='/System/Library/Frameworks/Accelerate.framework'/>
<depends_on path='/System/Library/Frameworks/IOKit.framework'/>
<depends_on path='/System/Library/Frameworks/CoreServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<depends_on path='/System/Library/Frameworks/ApplicationServices.framework'/>
<depends_on path='/System/Library/Frameworks/CoreVideo.framework'/>
<constant name='QCCompositionAttributeBuiltInKey' type='@'/>
<constant name='QCCompositionAttributeCategoryKey' type='@'/>
<constant name='QCCompositionAttributeCopyrightKey' type='@'/>
<constant name='QCCompositionAttributeDescriptionKey' type='@'/>
<constant name='QCCompositionAttributeHasConsumersKey' type='@'/>
<constant name='QCCompositionAttributeIsTimeDependentKey' type='@'/>
<constant name='QCCompositionAttributeNameKey' type='@'/>
<constant name='QCCompositionCategoryDistortion' type='@'/>
<constant name='QCCompositionCategoryStylize' type='@'/>
<constant name='QCCompositionCategoryUtility' type='@'/>
<constant name='QCCompositionInputAudioPeakKey' type='@'/>
<constant name='QCCompositionInputAudioSpectrumKey' type='@'/>
<constant name='QCCompositionInputDestinationImageKey' type='@'/>
<constant name='QCCompositionInputImageKey' type='@'/>
<constant name='QCCompositionInputPaceKey' type='@'/>
<constant name='QCCompositionInputPreviewModeKey' type='@'/>
<constant name='QCCompositionInputPrimaryColorKey' type='@'/>
<constant name='QCCompositionInputRSSArticleDurationKey' type='@'/>
<constant name='QCCompositionInputRSSFeedURLKey' type='@'/>
<constant name='QCCompositionInputScreenImageKey' type='@'/>
<constant name='QCCompositionInputSecondaryColorKey' type='@'/>
<constant name='QCCompositionInputSourceImageKey' type='@'/>
<constant name='QCCompositionInputTrackInfoKey' type='@'/>
<constant name='QCCompositionInputTrackPositionKey' type='@'/>
<constant name='QCCompositionInputTrackSignalKey' type='@'/>
<constant name='QCCompositionInputXKey' type='@'/>
<constant name='QCCompositionInputYKey' type='@'/>
<constant name='QCCompositionOutputImageKey' type='@'/>
<constant name='QCCompositionOutputWebPageURLKey' type='@'/>
<constant name='QCCompositionPickerPanelDidSelectCompositionNotification' type='@'/>
<constant name='QCCompositionPickerViewDidSelectCompositionNotification' type='@'/>
<constant name='QCCompositionProtocolGraphicAnimation' type='@'/>
<constant name='QCCompositionProtocolGraphicTransition' type='@'/>
<constant name='QCCompositionProtocolImageFilter' type='@'/>
<constant name='QCCompositionProtocolMusicVisualizer' type='@'/>
<constant name='QCCompositionProtocolRSSVisualizer' type='@'/>
<constant name='QCCompositionProtocolScreenSaver' type='@'/>
<constant name='QCCompositionRepositoryDidUpdateNotification' type='@'/>
<constant name='QCPlugInAttributeCopyrightKey' type='@'/>
<constant name='QCPlugInAttributeDescriptionKey' type='@'/>
<constant name='QCPlugInAttributeNameKey' type='@'/>
<constant name='QCPlugInExecutionArgumentEventKey' type='@'/>
<constant name='QCPlugInExecutionArgumentMouseLocationKey' type='@'/>
<constant name='QCPlugInPixelFormatARGB8' type='@'/>
<constant name='QCPlugInPixelFormatBGRA8' type='@'/>
<constant name='QCPlugInPixelFormatI8' type='@'/>
<constant name='QCPlugInPixelFormatIf' type='@'/>
<constant name='QCPlugInPixelFormatRGBAf' type='@'/>
<constant name='QCPortAttributeDefaultValueKey' type='@'/>
<constant name='QCPortAttributeMaximumValueKey' type='@'/>
<constant name='QCPortAttributeMenuItemsKey' type='@'/>
<constant name='QCPortAttributeMinimumValueKey' type='@'/>
<constant name='QCPortAttributeNameKey' type='@'/>
<constant name='QCPortAttributeTypeKey' type='@'/>
<constant name='QCPortTypeBoolean' type='@'/>
<constant name='QCPortTypeColor' type='@'/>
<constant name='QCPortTypeImage' type='@'/>
<constant name='QCPortTypeIndex' type='@'/>
<constant name='QCPortTypeNumber' type='@'/>
<constant name='QCPortTypeString' type='@'/>
<constant name='QCPortTypeStructure' type='@'/>
<constant name='QCRendererEventKey' type='@'/>
<constant name='QCRendererMouseLocationKey' type='@'/>
<constant name='QCViewDidStartRenderingNotification' type='@'/>
<constant name='QCViewDidStopRenderingNotification' type='@'/>
<enum name='kQCPlugInExecutionModeConsumer' value='3'/>
<enum name='kQCPlugInExecutionModeProcessor' value='2'/>
<enum name='kQCPlugInExecutionModeProvider' value='1'/>
<enum name='kQCPlugInTimeModeIdle' value='1'/>
<enum name='kQCPlugInTimeModeNone' value='0'/>
<enum name='kQCPlugInTimeModeTimeBase' value='2'/>
<class name='NSObject'>
<method selector='bindTextureRepresentationToCGLContext:textureUnit:normalizeCoordinates:'>
<arg type='B' index='2'/>
</method>
<method selector='canRenderWithCGLContext:'>
<retval type='B'/>
</method>
<method selector='compositionParameterView:shouldDisplayParameterWithKey:attributes:'>
<retval type='B'/>
</method>
<method selector='copyRenderedTextureForCGLContext:pixelFormat:bounds:isFlipped:'>
<arg type='^B' index='3'/>
</method>
<method selector='lockBufferRepresentationWithPixelFormat:colorSpace:forBounds:'>
<retval type='B'/>
</method>
<method selector='lockTextureRepresentationWithColorSpace:forBounds:'>
<retval type='B'/>
</method>
<method variadic='true' selector='logMessage:'>
<arg printf_format='true' index='0'/>
</method>
<method selector='outputImageProviderFromBufferWithPixelFormat:pixelsWide:pixelsHigh:baseAddress:bytesPerRow:releaseCallback:releaseContext:colorSpace:shouldColorMatch:'>
<arg function_pointer='true' type='^?' index='5'>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='B' index='8'/>
</method>
<method selector='outputImageProviderFromTextureWithPixelFormat:pixelsWide:pixelsHigh:name:flipped:releaseCallback:releaseContext:colorSpace:shouldColorMatch:'>
<arg type='B' index='4'/>
<arg function_pointer='true' type='^?' index='5'>
<arg type='^{_CGLContextObject=}'/>
<arg type='I'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='B' index='8'/>
</method>
<method selector='renderToBuffer:withBytesPerRow:pixelFormat:forBounds:'>
<retval type='B'/>
</method>
<method selector='renderWithCGLContext:forBounds:'>
<retval type='B'/>
</method>
<method selector='setValue:forInputKey:'>
<retval type='B'/>
</method>
<method selector='shouldColorMatch'>
<retval type='B'/>
</method>
<method selector='shouldColorMatch'>
<retval type='B'/>
</method>
<method selector='textureFlipped'>
<retval type='B'/>
</method>
</class>
<class name='QCCompositionParameterView'>
<method selector='drawsBackground'>
<retval type='B'/>
</method>
<method selector='hasParameters'>
<retval type='B'/>
</method>
<method selector='setDrawsBackground:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='QCCompositionPickerView'>
<method selector='allowsEmptySelection'>
<retval type='B'/>
</method>
<method selector='drawsBackground'>
<retval type='B'/>
</method>
<method selector='isAnimating'>
<retval type='B'/>
</method>
<method selector='setAllowsEmptySelection:'>
<arg type='B' index='0'/>
</method>
<method selector='setDrawsBackground:'>
<arg type='B' index='0'/>
</method>
<method selector='setShowsCompositionNames:'>
<arg type='B' index='0'/>
</method>
<method selector='showsCompositionNames'>
<retval type='B'/>
</method>
</class>
<class name='QCPlugIn'>
<method selector='didValueForInputKeyChange:'>
<retval type='B'/>
</method>
<method selector='execute:atTime:withArguments:'>
<retval type='B'/>
</method>
<method selector='loadPlugInAtPath:' class_method='true'>
<retval type='B'/>
</method>
<method selector='setValue:forOutputKey:'>
<retval type='B'/>
</method>
<method selector='startExecution:'>
<retval type='B'/>
</method>
</class>
<class name='QCRenderer'>
<method selector='renderAtTime:arguments:'>
<retval type='B'/>
</method>
<method selector='initWithCGLContext:pixelFormat:colorSpace:composition:'>
<arg index='0' type_modifier='n'/>
<arg index='1' type_modifier='n'/>
</method>
</class>
<class name='QCView'>
<method selector='autostartsRendering'>
<retval type='B'/>
</method>
<method selector='isPausedRendering'>
<retval type='B'/>
</method>
<method selector='isRendering'>
<retval type='B'/>
</method>
<method selector='loadComposition:'>
<retval type='B'/>
</method>
<method selector='loadCompositionFromFile:'>
<retval type='B'/>
</method>
<method selector='renderAtTime:arguments:'>
<retval type='B'/>
</method>
<method selector='setAutostartsRendering:'>
<arg type='B' index='0'/>
</method>
<method selector='startRendering'>
<retval type='B'/>
</method>
</class>
<informal_protocol name='QCCompositionParameterViewDelegate'>
<method type='v16@0:4@8@12' selector='compositionParameterView:didChangeParameterWithKey:'/>
<method type='B20@0:4@8@12@16' selector='compositionParameterView:shouldDisplayParameterWithKey:attributes:'/>
</informal_protocol>
<informal_protocol name='QCCompositionPickerViewDelegate'>
<method type='v16@0:4@8@12' selector='compositionPickerView:didSelectComposition:'/>
<method type='v12@0:4@8' selector='compositionPickerViewDidStartAnimating:'/>
<method type='v12@0:4@8' selector='compositionPickerViewWillStopAnimating:'/>
</informal_protocol>
</signatures>