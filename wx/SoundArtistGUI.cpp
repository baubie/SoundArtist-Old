///////////////////////////////////////////////////////////////////////////// C++ code generated with wxFormBuilder (version Sep 12 2010)// http://www.wxformbuilder.org///// PLEASE DO "NOT" EDIT THIS FILE!///////////////////////////////////////////////////////////////////////////#include "SoundArtistGUI.h"///////////////////////////////////////////////////////////////////////////MainWindow::MainWindow( wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style ) : wxFrame( parent, id, title, pos, size, style ){	this->SetSizeHints( wxDefaultSize, wxDefaultSize );		m_menubar = new wxMenuBar( 0 );	m_file = new wxMenu();	wxMenuItem* m_menuOpen;	m_menuOpen = new wxMenuItem( m_file, wxID_ANY, wxString( wxT("Open") ) , wxEmptyString, wxITEM_NORMAL );	m_file->Append( m_menuOpen );		wxMenuItem* m_menuQuit;	m_menuQuit = new wxMenuItem( m_file, wxID_ANY, wxString( wxT("Quit") ) , wxEmptyString, wxITEM_NORMAL );	m_file->Append( m_menuQuit );		m_menubar->Append( m_file, wxT("File") ); 		this->SetMenuBar( m_menubar );		m_toolBar = this->CreateToolBar( wxTB_HORIZONTAL, wxID_ANY ); 	m_toolBar->Realize();		wxBoxSizer* bSizer1;	bSizer1 = new wxBoxSizer( wxVERTICAL );		wxBoxSizer* bSizer9;	bSizer9 = new wxBoxSizer( wxHORIZONTAL );		wxBoxSizer* bSizer12;	bSizer12 = new wxBoxSizer( wxVERTICAL );		wxBoxSizer* bSizer13;	bSizer13 = new wxBoxSizer( wxVERTICAL );		m_staticText3 = new wxStaticText( this, wxID_ANY, wxT("Sampling Rate"), wxDefaultPosition, wxDefaultSize, 0 );	m_staticText3->Wrap( -1 );	bSizer13->Add( m_staticText3, 0, wxALL, 5 );		m_samplerateLabel = new wxStaticText( this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	m_samplerateLabel->Wrap( -1 );	bSizer13->Add( m_samplerateLabel, 0, wxALL, 5 );		m_staticText5 = new wxStaticText( this, wxID_ANY, wxT("Duration"), wxDefaultPosition, wxDefaultSize, 0 );	m_staticText5->Wrap( -1 );	bSizer13->Add( m_staticText5, 0, wxALL, 5 );		m_durationLabel = new wxStaticText( this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );	m_durationLabel->Wrap( -1 );	bSizer13->Add( m_durationLabel, 0, wxALL, 5 );		bSizer12->Add( bSizer13, 1, wxEXPAND, 5 );		m_pg = new wxPropertyGrid(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxPG_BOLD_MODIFIED|wxPG_SPLITTER_AUTO_CENTER|wxPG_TOOLBAR|wxPG_DESCRIPTION|wxEXPAND);		m_pg->SetExtraStyle( wxPG_EX_HELP_AS_TOOLTIPS );	m_pg->SetMinSize( wxSize( 300,-1 ) );		bSizer12->Add( m_pg, 5, wxEXPAND, 5 );		bSizer9->Add( bSizer12, 0, 0, 5 );		m_staticline1 = new wxStaticLine( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLI_VERTICAL );	bSizer9->Add( m_staticline1, 0, wxEXPAND | wxALL, 5 );		wxBoxSizer* bSizer10;	bSizer10 = new wxBoxSizer( wxVERTICAL );		m_toolBarWaveForm = new wxToolBar( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTB_HORIZONTAL ); 	m_toolBarWaveForm->Realize();		bSizer10->Add( m_toolBarWaveForm, 0, wxEXPAND, 5 );		m_panelWaveform = new wxPanel( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );	bSizer10->Add( m_panelWaveform, 1, wxEXPAND | wxALL, 5 );		m_toolBarSpectrogram = new wxToolBar( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTB_HORIZONTAL ); 	m_toolBarSpectrogram->Realize();		bSizer10->Add( m_toolBarSpectrogram, 0, wxEXPAND, 5 );		m_panelSpectrogram = new wxPanel( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );	bSizer10->Add( m_panelSpectrogram, 1, wxEXPAND | wxALL, 5 );		bSizer9->Add( bSizer10, 1, wxEXPAND, 5 );		bSizer1->Add( bSizer9, 1, wxEXPAND, 5 );		this->SetSizer( bSizer1 );	this->Layout();		this->Centre( wxBOTH );		// Connect Events	this->Connect( m_menuOpen->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWindow::OnOpen ) );	this->Connect( m_menuQuit->GetId(), wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWindow::OnQuit ) );	m_panelWaveform->Connect( wxEVT_PAINT, wxPaintEventHandler( MainWindow::OnWaveformPaint ), NULL, this );	m_panelWaveform->Connect( wxEVT_SIZE, wxSizeEventHandler( MainWindow::OnWaveformResize ), NULL, this );}MainWindow::~MainWindow(){	// Disconnect Events	this->Disconnect( wxID_ANY, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWindow::OnOpen ) );	this->Disconnect( wxID_ANY, wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler( MainWindow::OnQuit ) );	m_panelWaveform->Disconnect( wxEVT_PAINT, wxPaintEventHandler( MainWindow::OnWaveformPaint ), NULL, this );	m_panelWaveform->Disconnect( wxEVT_SIZE, wxSizeEventHandler( MainWindow::OnWaveformResize ), NULL, this );	}